{"mode":"javascript","xmlText":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><block type=\"ai_event_forever\" id=\"476+L,b7`_XJF_cC5H%/\" x=\"-362\" y=\"-387\"></block></xml>","javascript":"from yolobit import *\nfrom aiot_dht20 import DHT20\nfrom mqtt import *\nfrom event_manager import *\nimport time\nimport music\n\nmqtt.connect_wifi('abcd','123456789')\nmqtt.connect_broker(server = 'io.adafruit.com', port = 1883, username = '17000', password = 'aio_EuKa84VicJAaEv7aawGBtoUGUhDn')\ndisplay.scroll('OK')\n\ndef iot_task():\n  mqtt.publish('temperature', temperature())\n  mqtt.publish('humidity', light_level())\ndef sensing_task():\n  global aiot_lcd1602, aiot_dht20\n  aiot_lcd1602.move_to(0, 0)\n  aiot_lcd1602.putstr((aiot_dht20.dht20_temperature()))\n  aiot_lcd1602.move_to(1, 0)\n  aiot_lcd1602.putstr((aiot_dht20.dht20_humidity()))\ndef automation_task():\n  global aiot_lcd1602, aiot_dht20\n  aiot_dht20.read_dht20()\n  if (aiot_dht20.dht20_temperature()) > 28:\n    pin0.write_digital((1))\n    music.play(['C5:0.25'], wait=True)\n    music.play(['F4:0.25'], wait=True)\n  else:\n    pin0.write_digital((0))\n    music.play(['A4:1'], wait=True)\ndef blibking_task():\n  global aiot_lcd1602, aiot_dht20\n  display.show(Image.YES)\n  time.sleep_ms(2000)\n  display.show(Image.NO)\ndef play_music_task():\n  global aiot_lcd1602, aiot_dht20\n  music.play(['D3:0.25'], wait=True)\n  music.play(['D3:0.25'], wait=True)\n  music.play(['D4:0.5'], wait=True)\n  music.play(['D3:0.5'], wait=True)\n  music.play(['R:0.25'], wait=True)\n  music.play(['AB3:0.5'], wait=True)\n  music.play(['R:0.25'], wait=True)\n  music.play(['G3:0.5'], wait=True)\n  music.play(['F3:0.5'], wait=True)\n  music.play(['D3:0.25'], wait=True)\n  music.play(['F3:0.25'], wait=True)\n  music.play(['G3:0.25'], wait=True)\n\nevent_manager.reset()\nevent_manager.add_timer_event(5000, iot_task)\nevent_manager.add_timer_event(1000, automation_task)\nevent_manager.add_timer_event(1000, play_music_task)\nevent_manager.add_timer_event(1000, blibking_task)\nevent_manager.add_timer_event(1000, sensing_task)\n\nwhile(True):\n  event_manager.run()\n  time.sleep_ms(1000)\n","name":"untitled","extensions":[],"device":"ai"}